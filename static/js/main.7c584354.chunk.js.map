{"version":3,"sources":["components/Popup.jsx","components/IntroText.jsx","components/Countdown.jsx","components/Timer.jsx","components/App.js","index.js"],"names":["Popup","isBreakTime","timeIsUp","setTimeIsUp","class","role","aria-labelledby","aria-describedby","id","type","onClick","IntroText","className","Countdown","setIsBreakTime","firstTime","setFirstTime","useState","minutes","setMinutes","seconds","setSeconds","isActive","setActive","alarmSound","Audio","changeTime","event","name","target","useEffect","interval","play","clearInterval","setInterval","aria-label","Timer","introText","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7c584354.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Popup({ isBreakTime, timeIsUp, setTimeIsUp }) {\r\n  \r\n\r\n  return (\r\n    <div\r\n      class={timeIsUp ? \"dialog\" : \"dialog hidden\"}\r\n      role=\"dialog\"\r\n      aria-labelledby=\"dialog-title\"\r\n      aria-describedby=\"dialog-description\">\r\n      <h2 id=\"dialog-title\">Time is up!</h2>\r\n      <p id=\"dialog-description\">\r\n        {isBreakTime ? \"Time to take a 5 minutes break.\" : \"Time to refocus.\"}\r\n      </p>\r\n      <button\r\n        type=\"button\"\r\n        class=\"close-dialog\"\r\n        onClick={() => {\r\n          setTimeIsUp(false);\r\n        }}>\r\n        Close\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Popup;\r\n","import React from \"react\";\r\n\r\nfunction IntroText() {\r\n  return (\r\n    <>\r\n      <h1>Let's start this session</h1>\r\n      <p className=\"smaller-paragrahp\">\r\n          The timer is ready for you. You can add time or subract to fit your needs. The default settings are 25 minutes then 5 minutes break.\r\n      </p>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default IntroText;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nfunction Countdown({\r\n  isBreakTime,\r\n  setIsBreakTime,\r\n  setTimeIsUp,\r\n  firstTime,\r\n  setFirstTime,\r\n}) {\r\n  const [minutes, setMinutes] = useState(25);\r\n  const [seconds, setSeconds] = useState(0);\r\n  const [isActive, setActive] = useState(false);\r\n  const alarmSound =\r\n    new Audio(\"http://soundbible.com/grab.php?id=2189&type=mp3\");\r\n\r\n  function changeTime(event) {\r\n    const name = event.target.name;\r\n    if (name === \"add\") {\r\n      setMinutes(minutes + 1);\r\n    } else if (name === \"sub\") {\r\n      setMinutes(minutes - 1);\r\n    }\r\n  }\r\n\r\n  function resetTimer() {\r\n    setActive(false);\r\n    setFirstTime(true);\r\n    setSeconds(0);\r\n    setMinutes(25);\r\n  }\r\n\r\n  useEffect(() => {\r\n    let interval = null;\r\n    if (isActive) {\r\n      if (seconds < 0) {\r\n        setMinutes(minutes - 1);\r\n        setSeconds(59);\r\n      }\r\n      if (minutes < 0) {\r\n        setTimeIsUp(true);\r\n        setActive(false);\r\n        setSeconds(0);\r\n        alarmSound.play();\r\n        if (isBreakTime) {\r\n          setIsBreakTime(false);\r\n          setMinutes(25);\r\n        } else {\r\n          setIsBreakTime(true);\r\n          setMinutes(5);\r\n        }\r\n        clearInterval(interval);\r\n      } else {\r\n        interval = setInterval(() => {\r\n          setSeconds(seconds - 1);\r\n        }, 1000);\r\n      }\r\n    } else if (!isActive && seconds !== 0) {\r\n      clearInterval(interval);\r\n    }\r\n    return () => clearInterval(interval);\r\n  }, [\r\n    isActive,\r\n    seconds,\r\n    minutes,\r\n    isBreakTime,\r\n    setIsBreakTime,\r\n    setTimeIsUp,\r\n    alarmSound,\r\n  ]);\r\n\r\n  const textAboveTimer = () => {\r\n    if (firstTime) {\r\n      return;\r\n    } else {\r\n      return <h1>{isBreakTime ? \"Time to have a break\" : \"Time to focus\"}</h1>;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {textAboveTimer()}\r\n      <button\r\n        name=\"add\"\r\n        onClick={changeTime}\r\n        className=\"btn-change-time\"\r\n        aria-label=\"Add minutes\">\r\n        +\r\n      </button>\r\n      <p className=\"countdown\">\r\n        {minutes < 10 ? `0${minutes}` : minutes} :{\" \"}\r\n        {seconds < 10 ? `0${seconds}` : seconds}\r\n      </p>\r\n      <button\r\n        name=\"sub\"\r\n        onClick={changeTime}\r\n        className=\"btn-change-time\"\r\n        aria-label=\"Subtract minutes\">\r\n        -\r\n      </button>\r\n      <div>\r\n        <button\r\n          name=\"start-pause\"\r\n          onClick={() => {\r\n            setActive(!isActive);\r\n            setFirstTime(false);\r\n          }}\r\n          className=\"btn-start-timer\">\r\n          {isActive ? \"Pause\" : \"Start\"}\r\n        </button>\r\n        <button name=\"reset\" onClick={resetTimer} className=\"btn-start-timer\">\r\n          Reset\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Countdown;\r\n","import React, { useState } from \"react\";\r\n\r\nimport Popup from \"./Popup\";\r\nimport IntroText from \"./IntroText\";\r\nimport Countdown from \"./Countdown\";\r\n\r\nfunction Timer() {\r\n  const [isBreakTime, setIsBreakTime] = useState(false);\r\n  const [timeIsUp, setTimeIsUp] = useState(false);\r\n  const [firstTime, setFirstTime] = useState(true);\r\n \r\n\r\n\r\n  const introText = () => {\r\n    if (firstTime) {\r\n      return <IntroText />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"countdown-area\">\r\n      {introText()}\r\n      <Popup\r\n        isBreakTime={isBreakTime}\r\n        setIsBreakTime={setIsBreakTime}\r\n        timeIsUp={timeIsUp}\r\n        setTimeIsUp={setTimeIsUp}\r\n      />\r\n      <Countdown\r\n          isBreakTime={isBreakTime}\r\n          setIsBreakTime={setIsBreakTime}\r\n          timeIsUp={timeIsUp}\r\n          setTimeIsUp={setTimeIsUp}\r\n          firstTime={firstTime}\r\n          setFirstTime={setFirstTime}\r\n        />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Timer;\r\n","import React from \"react\";\r\nimport Timer from \"./Timer\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\"></header>\r\n      <section className=\"pomodoro-timer-window\">\r\n        <Timer />\r\n      </section>\r\n      <footer className=\"App-footer\"></footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}